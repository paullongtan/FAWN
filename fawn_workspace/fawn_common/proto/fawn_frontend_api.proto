syntax = "proto3";

package fawn_frontend_api;

service FawnFrontendService {
    // request to join the ring
    // returns the successor and predecessor of the new node
    // also returns the migrate info for the new node to migrate data from the tails of chain that the new node will be in
    rpc RequestJoinRing (RequestJoinRingRequest) returns (RequestJoinRingResponse);
    rpc FinalizeJoinRing (FinalizeJoinRingRequest) returns (FinalizeJoinRingResponse);
    rpc NotifyBackendJoin(NotifyBackendJoinRequest) returns (NotifyBackendJoinResponse);
    rpc NotifyBackendLeave(NotifyBackendLeaveRequest) returns (NotifyBackendLeaveResponse);
    rpc GetValue (GetRequest) returns (GetResponse);
    rpc PutValue (PutRequest) returns (PutResponse);
}

message NodeInfo {
    string ip = 1;
    uint32 port = 2;
    uint32 id = 3;
}

message MigrateInfo {
    NodeInfo src_info = 1;
    uint32 start_id = 2;
    uint32 end_id = 3;
}

message RequestJoinRingRequest {
    NodeInfo node_info = 1;
}

message RequestJoinRingResponse {
    repeated MigrateInfo migrate_info = 1;
    NodeInfo successor = 2;
    NodeInfo predecessor = 3;
}


message FinalizeJoinRingRequest {
    NodeInfo node_info = 1;
}

message FinalizeJoinRingResponse {
}

message NotifyBackendJoinRequest {
    NodeInfo backend_info = 1;
}
message NotifyBackendJoinResponse {
}

message NotifyBackendLeaveRequest {
    NodeInfo backend_info = 1;
}
message NotifyBackendLeaveResponse {
}

message GetRequest {
    string user_key = 1;
}

message GetResponse {
    bytes value = 1;
}

message PutRequest {
    string user_key = 1;
    bytes value = 2;
}

message PutResponse {
}
